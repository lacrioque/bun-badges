name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    # Set up service containers
    services:
      # PostgreSQL service container
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bun_badges_test
          # Optimize postgres for testing
          POSTGRES_INITDB_ARGS: "--nosync"
        ports:
          # Map container port 5432 to host port 5432
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --name postgres-test

    env:
      # Set environment variables for the job
      CI: true
      NODE_ENV: test
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/bun_badges_test
      JWT_SECRET: ci-test-jwt-secret
      LOG_LEVEL: info

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Type check
        run: bun run tsc

      - name: Run linter
        run: bun run lint
      
      - name: Initialize test database
        run: |
          echo "Setting up test database schema..."
          bun run db:migrate
          echo "âœ… Database schema initialized"

      - name: Run unit tests
        run: bun run test:unit

      - name: Run integration tests
        run: bun run test:integration

      - name: Run e2e tests
        run: bun run test:e2e
      
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/
            coverage/
          if-no-files-found: ignore

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Build
        run: bun run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/ 