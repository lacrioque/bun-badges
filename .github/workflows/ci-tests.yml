name: CI Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Set environment variables available to all steps
    env:
      CI: true
      NODE_ENV: test
      DATABASE_URL: postgres://postgres:${{ secrets.DB_PASSWORD || 'postgres' }}@localhost:5432/bun_badges_test
      PORT: 3001
      JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
      SKIP_DOCKER: true
      LOG_LEVEL: info
      BUN_TEST_TIMEOUT: 30000
    
    # Service containers to run alongside the job
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:16-alpine
        # Service container environment variables
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD || 'postgres' }}
          POSTGRES_DB: bun_badges_test
          # Optimize PostgreSQL for testing
          POSTGRES_INITDB_ARGS: "--nosync"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        # Forward port 5432 on service container to port 5432 on host
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install

      - name: Create database schema
        run: |
          echo "Setting up database schema..."
          bun run db:push
          echo "Database schema created successfully"
      - name: Wait for schema to be applied
        run: sleep 10
      - name: Debug List database tables
        run: bun run src/db/list-tables.ts
      - name: Run database connection test
        env:
          INTEGRATION_TEST: true
        run: bun test tests/integration/controllers/issuer/integration/db-test.integration.test.ts
      
      - name: Run unit tests
        run: bun test tests/unit
      
      - name: Run integration tests
        env:
          INTEGRATION_TEST: true
        run: bun test tests/integration
      
      - name: Run E2E tests
        env:
          E2E_TEST: true
        run: bun test tests/e2e 