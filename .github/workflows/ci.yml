name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Run linter
        run: bun run lint

  typecheck:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Type check
        run: bun run tsc

  test:
    needs: [typecheck]
    runs-on: ubuntu-latest
    
    # Add PostgreSQL service container
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bun_badges_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    # Define environment variables for the test job
    env:
      CI: true
      NODE_ENV: test
      SKIP_DOCKER: true
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/bun_badges_test
      JWT_SECRET: ci-test-jwt-secret-for-github-actions
      LOG_LEVEL: info
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Initialize test database
        run: |
          # Setup database
          echo "Setting up database with CI database setup..."
          bun run src/utils/test/ci-database-setup.ts
          
          # Run migrations
          echo "Running database migrations..."
          bun run db:migrate
          bun run db:migrate:evidence-url
        
      - name: Run tests (unit, integration, e2e)
        run: |
          bun run test:unit
          bun run test:integration
          bun run test:e2e

  build:
    needs: [test]
    runs-on: ubuntu-latest
    # Only run build job on main branch, not on PRs
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Build
        run: bun run build
        
      - name: Verify build output
        run: |
          # Check if dist/index.js exists
          if [ ! -f "dist/index.js" ]; then
            echo "Error: dist/index.js not found. Build failed."
            exit 1
          fi
          echo "âœ… Build verification successful" 