name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: ${{ vars.DB_USER || 'postgres' }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD || 'postgres' }}
          POSTGRES_DB: ${{ vars.DB_NAME || 'bun_badges_test' }}
          POSTGRES_INITDB_ARGS: "--nosync"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
      
      - name: Make setup script executable
        run: chmod +x tasks/ci-test-setup.sh
        
      - name: Setup CI test environment
        run: ./tasks/ci-test-setup.sh
        env:
          CI: "true"
          FORCE_MOCK_DB: "false" # We're using a real DB from GitHub Actions services
          SKIP_DOCKER: "true"    # Skip Docker in CI since we're using services
          NODE_ENV: "test"
          DB_USER: ${{ vars.DB_USER || 'postgres' }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD || 'postgres' }}
          DB_HOST: "localhost"
          DB_PORT: "5432"
          DB_NAME: ${{ vars.DB_NAME || 'bun_badges_test' }}
          TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET || 'test-jwt-secret-for-ci-tests' }}
          LOG_LEVEL: "error"
          DATABASE_URL: "postgres://${{ vars.DB_USER || 'postgres' }}:${{ secrets.DB_PASSWORD || 'postgres' }}@localhost:5432/${{ vars.DB_NAME || 'bun_badges_test' }}"
        
      - name: Type check
        run: bun run tsc

      - name: Run linter
        run: bun run lint
        
      - name: Run unit tests
        run: bun run test:unit
        
      - name: Run integration tests
        run: bun run test:integration
        env:
          CI: "true"
          DB_USER: ${{ vars.DB_USER || 'postgres' }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD || 'postgres' }}
          DB_HOST: "localhost"
          DB_PORT: "5432"
          DB_NAME: ${{ vars.DB_NAME || 'bun_badges_test' }}
          DATABASE_URL: "postgres://${{ vars.DB_USER || 'postgres' }}:${{ secrets.DB_PASSWORD || 'postgres' }}@localhost:5432/${{ vars.DB_NAME || 'bun_badges_test' }}"
          
      - name: Run E2E tests
        run: bun run test:e2e
        env:
          CI: "true"
          DB_USER: ${{ vars.DB_USER || 'postgres' }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD || 'postgres' }}
          DB_HOST: "localhost"
          DB_PORT: "5432"
          DB_NAME: ${{ vars.DB_NAME || 'bun_badges_test' }}
          DATABASE_URL: "postgres://${{ vars.DB_USER || 'postgres' }}:${{ secrets.DB_PASSWORD || 'postgres' }}@localhost:5432/${{ vars.DB_NAME || 'bun_badges_test' }}"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'
          
      - name: Install dependencies
        run: bun install
        
      - name: Build
        run: bun run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/ 