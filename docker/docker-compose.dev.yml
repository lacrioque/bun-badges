services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-badges_dev}
      - JWT_SECRET=${JWT_SECRET}
      - AUTH_TOKEN_EXPIRY=${AUTH_TOKEN_EXPIRY:-15m}
      - REFRESH_TOKEN_EXPIRY=${REFRESH_TOKEN_EXPIRY:-1d}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - USE_HTTPS=${USE_HTTPS:-false}
      - TLS_CERT_FILE=${TLS_CERT_FILE:-/app/certs/cert.pem}
      - TLS_KEY_FILE=${TLS_KEY_FILE:-/app/certs/key.pem}
      - TLS_PASSPHRASE=${TLS_PASSPHRASE}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app:delegated
      - /app/node_modules
      - ./certs:/app/certs:delegated
    networks:
      - bun-badges-network-dev
    # The Dockerfile.dev entrypoint will handle installation and startup

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-badges_dev}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bun-badges-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  bun-badges-network-dev:
    driver: bridge 